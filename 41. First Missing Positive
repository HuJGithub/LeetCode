'''
Pick One

Given an unsorted integer array, find the smallest missing positive integer.
Example 1:
Input: [1,2,0]
Output: 3
Example 2:
Input: [3,4,-1,1]
Output: 2
Example 3:
Input: [7,8,9,11,12]
Output: 1
Note:
Your algorithm should run in O(n) time and uses constant extra space.
'''

class Solution:
    def firstMissingPositive(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if nums==[]:
            return 1
        length=len(nums)
        for i in range(length):
            while(nums[i]>0 and nums[i]<=length and nums[nums[i]-1]!=nums[i]):
                t=nums[i]
                nums[i]=nums[nums[i]-1]
                nums[t-1]=t
                
        for i in range(length):
            if nums[i]!=i+1:
                return i+1
        
        return length+1
