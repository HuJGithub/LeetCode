'''The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)
P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"
Write the code that will take a string and make this conversion given a number of rows:
string convert(string s, int numRows);
Example 1:
Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:
Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:

P     I    N
A   L S  I G
Y A   H R
P     I'''

class Solution:
    def convert(self, s, numRows):
        """
        :type s: str
        :type numRows: int
        :rtype: str
        """
        '''1.如果列数为1或大于字符串长度，则返回s。2.遍历字符串，每一个字符赋值给一个列表，从上往下循环
           3.遇到行数为n-1，则行数减一，若行数为0，则行数加一'''
        lists = ['']*numRows
        j = 0
        flag = 0
        if numRows == 1 or numRows>=len(s):
            return s
        for i in range(len(s)):       
            lists[j] += s[i]
            if j == numRows-1:              
                flag = 1
                j -= 1
            elif j == 0:
                flag = 0
                j += 1
            elif flag == 0:
                j += 1     
            else:
                j -= 1
        str = ''          
        str +=''.join(lists)
        return str
