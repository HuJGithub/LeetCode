...
Given a binary tree, find its minimum depth.
The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
Note: A leaf is a node with no children.
Example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its minimum depth = 2.
...

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def minDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if root==None:
            return 0
        queue=[root]
        tmp=[]
        level=1
        while queue!=[]:
            for c in queue:
                if c.left==None and c.right==None:
                    return level
                if c.left:
                    tmp.append(c.left)
                if c.right:
                    tmp.append(c.right)
            level+=1
            queue=tmp
            tmp=[]
        return level
