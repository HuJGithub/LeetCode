'''
Write a program to solve a Sudoku puzzle by filling the empty cells.
A sudoku solution must satisfy all of the following rules:
Each of the digits 1-9 must occur exactly once in each row.
Each of the digits 1-9 must occur exactly once in each column.
Each of the the digits 1-9 must occur exactly once in each of the 9 3x3 sub-boxes of the grid.
Empty cells are indicated by the character '.'.

A sudoku puzzle...

...and its solution numbers marked in red.
Note:
The given board contain only digits 1-9 and the character '.'.
You may assume that the given Sudoku puzzle will have a single unique solution.
The given board size is always 9x9.
'''

class Solution:
    def isValid(self, board, x, y, c):
        for i in range(9):
            if board[i][y] == c: 
                return False
        for j in range(9):
            if board[x][j] == c:
                return False
        for i in range(3):
            for j in range(3):
                if board[(x//3)*3 + i][(y//3)*3 + j] == c:
                    return False
        return True
    
    def solve(self,board):
        flag=0
        for i in range(9):
            if '.' in board[i]:
                flag=1
        if flag==0:
            return True
                
        for i in range(9):
            for j in range(9):
                if board[i][j]=='.':
                    for k in '123456789':
                        if  self.isValid(board, i, j, k):
                            board[i][j]=k
                            if self.solve(board):
                                return True
                            else:
                                board[i][j]='.'
                    return False
        return True
                
    def solveSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: void Do not return anything, modify board in-place instead.
        """
        self.solve(board)
                        
        return 
