'''Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.
Example: 
Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4'''

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        newhead = ListNode(0)
        
        head = newhead
        while l1!=None and l2!=None:
            if l1.val<=l2.val:
                newhead.next=l1
                newhead=l1
                l1=l1.next
            else:
                newhead.next=l2
                newhead=l2
                l2=l2.next
        if l1==None:
            newhead.next=l2
        else:
            newhead.next=l1
        return head.next
