'''
Given a 32-bit signed integer, reverse digits of an integer.
Example 1:
Input: 123
Output: 321
Example 2:
Input: -123
Output: -321
Example 3:
Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. 
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows. '''

class Solution:
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        '''判断数字是否大于32位最大数或者等于0，如果不等于0，则进行整除和求余运算，最后判断结果是否大于32位最大数
           还要注意中间位数是0是可以允许的'''
        str_tmp = ''

        if abs(x)>2147483647 or x==0:
            return 0
        
        x_tmp = abs(x)
        flag = 0
        while x_tmp:
            tmp = x_tmp%10
            x_tmp = x_tmp//10            
            if tmp !=0:
                str_tmp += str(tmp)
                flag = 1
            else:
                if flag:
                    str_tmp += str(tmp)     
        ret_value = int(str_tmp)
        if ret_value>2147483647:
            return 0
        if x>0:
            return ret_value
        else:
            return -ret_value
