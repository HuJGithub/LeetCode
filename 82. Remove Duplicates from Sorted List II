...
Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.
Example 1:
Input: 1->2->3->3->4->4->5
Output: 1->2->5
Example 2:
Input: 1->1->1->2->3
Output: 2->3
...

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        if head==None:
            return None
        
        fakehead=ListNode(0)
        fakehead.next=head
        pre=fakehead
        while head!=None:
            while head.next and head.val==head.next.val:
                head=head.next
            if pre.next!=head:
                pre.next=head.next
            else:
                pre=head
            head=head.next
        return fakehead.next
