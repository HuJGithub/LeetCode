'''Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.
Example:
Given array nums = [-1, 2, 1, -4], and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).'''


class Solution:
    def threeSumClosest(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        '''找出负的最大数和正的最小数，再从两个中选择最接近的即可'''
        nearest = 10000000
        tmpl,tmpr = -100000,100000
        nums = sorted(nums)
        for i in range(len(nums)-2):
            l = i+1
            r = len(nums)-1
            if i>0 and nums[i]==nums[i-1]:
                continue
            while l<r:
                tmp = nums[i]+nums[l]+nums[r]-target
                if tmp ==0:
                    return target
                if tmp<0:
                    tmpl = max(tmp,tmpl)
                    l += 1
                else:
                    tmpr = min(tmp,tmpr)
                    r -= 1
        if abs(tmpl)<abs(tmpr):
            return tmpl+target
        else:
            return tmpr+target
